using System.Text.RegularExpressions;

namespace Common.Utilities
{
    public static class ValidateInputs
    {
        /// <summary>
        /// بررسی صحت متن های ورودی
        /// </summary>
        /// <param name="str">متن ورودی</param>
        /// <param name="regex">کد regix</param>
        /// <returns></returns>
        public static bool ValidateRegix(this string str, string regex)
        {
            try
            {
                Match match = Regex.Match(str, regex, RegexOptions.IgnoreCase);
                if (str != string.Empty && match.Success)
                {
                    return true;
                }
                return false;
            }
            catch (Exception)
            {
                return false;
            }
        }
        /// <summary>
        /// بررسی صحیح بودن شماره موبایل
        /// </summary>
        /// <param name="str"></param>
        /// <returns></returns>
        public static bool IsValidMobileNumber(this string str)
        {
            var regex = @"^(\+98|0098|98|0)?9\d{9}$";
            return str.ValidateRegix(regex);
        }
        /// <summary>
        /// بررسی صحیح بودن فرمت ایمیل
        /// </summary>
        /// <param name="str"></param>
        /// <returns></returns>
        public static bool ValidateEmail(this string str)
        {
            var regex = @"^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{1,3})$";
            return str.ValidateRegix(regex);
        }
        /// <summary>
        /// نرمال سازی شماره موبایل
        /// </summary>
        /// <param name="str">متن ورودی</param>
        /// <returns></returns>
        public static string NormalizedMobileNumber(this string str)
        {
            if (str.StartsWith("+98"))
            {
                str = "0" + str.Remove(0, 3);
            }
            else if (str.StartsWith("0098"))
            {
                str = "0" + str.Remove(0, 4);
            }
            else if (str.StartsWith("98"))
            {
                str = "0" + str.Remove(0, 2);
            }
            else if (str.StartsWith("0"))
            {
                str = "0" + str.Remove(0, 1);
            }
            else
            {
                return str;
            }
            return str;
        }
        /// <summary>
        /// چک کردن کد ملی
        /// </summary>
        /// <param name="nationalCode">کد ملی</param>
        /// <returns></returns>
        public static bool ValidateNationalCode(this string nationalCode)
        {
            bool result;
            try
            {
                //در صورتی که رقم‌های کد ملی وارد شده یکسان باشد
                var allDigitEqual = new[] { "0000000000", "1111111111", "2222222222", "3333333333", "4444444444", "5555555555", "6666666666", "7777777777", "8888888888", "9999999999" };
                if (allDigitEqual.Contains(nationalCode)) return false;

                //عملیات شرح داده شده در بالا
                var chArray = nationalCode.ToCharArray();
                var num0 = Convert.ToInt32(chArray[0].ToString()) * 10;
                var num2 = Convert.ToInt32(chArray[1].ToString()) * 9;
                var num3 = Convert.ToInt32(chArray[2].ToString()) * 8;
                var num4 = Convert.ToInt32(chArray[3].ToString()) * 7;
                var num5 = Convert.ToInt32(chArray[4].ToString()) * 6;
                var num6 = Convert.ToInt32(chArray[5].ToString()) * 5;
                var num7 = Convert.ToInt32(chArray[6].ToString()) * 4;
                var num8 = Convert.ToInt32(chArray[7].ToString()) * 3;
                var num9 = Convert.ToInt32(chArray[8].ToString()) * 2;
                var a = Convert.ToInt32(chArray[9].ToString());

                var b = (((((((num0 + num2) + num3) + num4) + num5) + num6) + num7) + num8) + num9;
                var c = b % 11;

                return (((c < 2) && (a == c)) || ((c >= 2) && ((11 - c) == a)));
            }
            catch { result = false; }
            return result;
        }
    }
}
